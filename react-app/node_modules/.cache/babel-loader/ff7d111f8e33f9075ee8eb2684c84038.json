{"ast":null,"code":"const SET_USER = \"session/SET_USER\";\nconst REMOVE_USER = \"session/REMOVE_USER\";\n\nconst setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER\n});\n\nexport const authenticate = () => async dispatch => {\n  const response = await fetch('/api/auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n\n  if (data.errors) {\n    return;\n  }\n\n  dispatch(setUser(data));\n};\nexport const login = (email, password) => async dispatch => {\n  const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n\n  if (data.errors) {\n    return data;\n  }\n\n  dispatch(setUser(data));\n  return {};\n};\nexport const logout = () => async dispatch => {\n  const response = await fetch(\"/api/auth/logout\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n  dispatch(removeUser());\n};\nexport const signUp = (username, email, password) => async dispatch => {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n\n  if (data.errors) {\n    return;\n  }\n\n  dispatch(setUser(data));\n};\nconst initialState = {};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return {\n        user: action.payload\n      };\n\n    case REMOVE_USER:\n      return {\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/johnsims/Desktop/spaceXchange/react-app/src/store/session.js"],"names":["SET_USER","REMOVE_USER","setUser","user","type","payload","removeUser","authenticate","dispatch","response","fetch","headers","data","json","errors","login","email","password","method","body","JSON","stringify","logout","signUp","username","initialState","reducer","state","action"],"mappings":"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","sourcesContent":["\nconst SET_USER = \"session/SET_USER\"\nconst REMOVE_USER = \"session/REMOVE_USER\"\n\nconst setUser = (user) => ({\n    type: SET_USER,\n    payload: user\n})\n\nconst removeUser = () => ({\n    type: REMOVE_USER,\n})\n\n\nexport const authenticate = () => async dispatch => {\n  const response = await fetch('/api/auth/',{\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  const data = await response.json()\n  if (data.errors) {\n      return;\n  }\n  dispatch(setUser(data))\n\n}\n\nexport const login = (email, password) => async dispatch => {\n  const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n\n  const data = await response.json();\n  if (data.errors) {\n    return data;\n  }\n  dispatch(setUser(data))\n  return {}\n}\n\nexport const logout = () => async dispatch => {\n  const response = await fetch(\"/api/auth/logout\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    }\n  });\n\n  const data = await response.json();\n  dispatch(removeUser());\n\n};\n\n\nexport const signUp = (username, email, password) => async dispatch => {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n\n  const data = await response.json();\n  if (data.errors) {\n      return\n  }\n  dispatch(setUser(data))\n}\n\n\nconst initialState = {}\n\nexport default function reducer(state=initialState, action) {\n    switch (action.type) {\n\n        case SET_USER:\n            return {user: action.payload}\n        \n        case REMOVE_USER:\n            return {user: null}\n        \n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}